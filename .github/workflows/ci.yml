name: CI & Deploy

on:
  push:
    branches: [ master, develop ]

jobs:
  test:
    name: Test (Jest + Migration)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd "pg_isready -U postgres -d testdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      PGHOST: localhost
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: testdb

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run SQL Migrations (Test-DB)
        run: |
          psql -c "\dt" || echo "DB empty, applying migrations"
          psql -f base44/migrations/001_create_embeddings_table.sql

      - name: Run Jest Tests
        run: npm test

  deploy:
    name: Deploy to Prod
    needs: test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Apply Migrations to Prod-DB
        env:
          DATABASE_URL: ${{ secrets.PROD_DB_URL }}
        run: |
          psql "$DATABASE_URL" -f base44/migrations/001_create_embeddings_table.sql

      - name: Import n8n Workflows
        env:
          N8N_API_KEY: ${{ secrets.N8N_API_KEY }}
          N8N_URL: https://dein-n8n-server.example.com
        run: |
          for f in n8n/*.json; do
            curl -X POST "$N8N_URL/rest/workflows/import" \
              -H "Authorization: Bearer $N8N_API_KEY" \
              -H "Content-Type: application/json" \
              --data @"$f"
          done
